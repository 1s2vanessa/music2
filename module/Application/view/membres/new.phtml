

<h1><?php echo $this->translate('Register to Watch My Desk'); ?></h1>
<?php echo $this->form; ?>
Code source complet de la crÃ©ation du formulaire :

class Form_Inscription extends Zend_Form
{
	public function __construct($options = null)
	{
		parent::__construct($options);

		$this->setName('inscription');

		$login = new Zend_Form_Element_Text("login", array('size' => 25));
		$loginDoesntExist = new Zend_Validate_Db_NoRecordExists('membres', 'login');
		$login ->setLabel('Login')
		  ->setRequired(true)
		  ->addFilter('StripTags')
		  ->addFilter('StringTrim')
		  ->addValidator('NotEmpty')
		 	->addValidator($loginDoesntExist)
		 	->addValidator('StringLength', false, 3, 20)
		  ->setDescription("Login between 3 and 20 alphanumerics characters.");

		$emailDoesntExist = new Zend_Validate_Db_NoRecordExists('membres', 'email');
		$email = new Zend_Form_Element_Text("email", array('size' => 25));
		$email ->setLabel('Email address')
		  ->setRequired(true)
		  ->addFilter('StripTags')
		  ->addFilter('StringTrim')
		  ->addValidator('NotEmpty')
		 	->addValidator($emailDoesntExist)
		  ->addValidator('EmailAddress')
		  ->setDescription("Require a valid email address.");

		$password = new Zend_Form_Element_Password("password", array('size' => 25));
		$password ->setLabel('Password')
		  ->setRequired(true)
		  ->addFilter('StringTrim')
		  ->addValidator('NotEmpty');

		$repassword = new Zend_Form_Element_Password("repassword", array('size' => 25));
		$repassword ->setLabel('Retype password')
		  ->setRequired(true)
		  ->addFilter('StringTrim')
		  ->addValidator('NotEmpty');
		$repassword->setDescription("Retype the previous password to prevent errors.");

		$pays = new  Zend_Form_Element_Select("pays");
		  $pays ->setLabel('Country')
		  ->setRequired(true)
			->addMultiOptions(Zend_Locale::getCountryTranslationList(Zend_Registry::get('Zend_Locale')))
		  ->addValidator('NotEmpty');

		$pubKey = '';
		$privKey = '';
		$recaptcha = new Zend_Service_ReCaptcha($pubKey, $privKey);

		$adapter = new Zend_Captcha_ReCaptcha();
		$adapter->setService($recaptcha);

		$captcha = new Zend_Form_Element_Captcha('recaptcha', array( 'label' => "Captcha", 'captcha' => $adapter));
		$captcha->removeDecorator('label')->removeDecorator('errors');

		$this->addElements(array($login,$email, $password, $repassword, $pays, $captcha));
	}

	public function isValid($data)
  {
		$password 	= $this->getElement('password');
		$password->addValidator(new App_Validate_PasswordMatch($data['repassword']));

		return parent::isValid($data);;
  }
}